/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.actividadobtencionbuzonesentrada;

import javax.swing.*;
import javax.mail.*;
import java.awt.*;
import java.awt.event.*;
import java.util.Properties;

public class BuzonEntrada extends javax.swing.JFrame {

    private String host = "imap.gmail.com";
    private String username = "alvaro.ruiz.enrique@gmail.com"; // Cambiar
    private String password = "likt hjet gkav gteb"; // Cambiar

    private Session session;
    private Store store;

    public BuzonEntrada() {
        initComponents();
        connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboCarpetas = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        taBandeja = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        comboCarpetas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboCarpetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCarpetasActionPerformed(evt);
            }
        });

        taBandeja.setEditable(false);
        taBandeja.setColumns(20);
        taBandeja.setRows(5);
        jScrollPane1.setViewportView(taBandeja);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCarpetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(comboCarpetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboCarpetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCarpetasActionPerformed
        loadFolder(comboCarpetas.getSelectedItem().toString());

    }//GEN-LAST:event_comboCarpetasActionPerformed

    private void connect() {
        try {
            Properties props = new Properties();
            props.setProperty("mail.store.protocol", "imaps");

            session = Session.getInstance(props, null);
            store = session.getStore();
            store.connect(host, username, password);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error connecting to email server.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadFolder(String folderName) {
        try {
            Folder folder = store.getFolder(getGmailFolderName(folderName));
            folder.open(Folder.READ_ONLY);

            Message[] messages = folder.getMessages();
            taBandeja.setText("");

            for (int i = 0; i < messages.length; i++) {
                taBandeja.append("From: " + messages[i].getFrom()[0] + "\n");
                taBandeja.append("Subject: " + messages[i].getSubject() + "\n");
                taBandeja.append("Date: " + messages[i].getSentDate() + "\n");
                taBandeja.append("\n");
            }

            folder.close(false);
        } catch (MessagingException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading folder: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private String getGmailFolderName(String folderName) {
        System.out.println("Folder name received: " + folderName);

        switch (folderName) {
            case "Recibidos":
                return "INBOX";
            case "Destacados":
                return "[Gmail]/Destacados";
            case "Pospuestos":
                return "[Gmail]/Pospuestos";
            case "Importantes":
                return "[Gmail]/Importantes";
            case "Enviados":
                return "[Gmail]/Enviados";
            case "Borradores":
                return "[Gmail]/Borradores";
            case "Spam":
                return "[Gmail]/Spam";
            default:
                return folderName;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuzonEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuzonEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuzonEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuzonEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuzonEntrada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboCarpetas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taBandeja;
    // End of variables declaration//GEN-END:variables
}
